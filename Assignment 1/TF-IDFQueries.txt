wget https://github.com/myui/hivemall/releases/download/v0.4.2-rc.2/hivemall-core-0.4.2-rc.2-with-dependencies.jar
(copy define-all.hive from the drive folder)


------------------HIVE-------------------------------

add jar hivemall-core-0.4.2-rc.2-with-dependencies.jar;
source define-all.hive;

create temporary macro max2(x INT, y INT) if(x>y,x,y);
create temporary macro tfidf(tf FLOAT, df_t INT, n_docs INT) tf * (log(10, CAST(n_docs as FLOAT)/max2(1,df_t)) + 1.0);

create table highestScoreUsers as select owneruserid, sum(score) as OverallScore from temp group by OwnerUserId order by OverallScore desc limit 10;

create table highestScoreUsers1 as select d.OwnerUserID,title from stack d join highestScoreUsers t on  d.OwnerUserID = t.OwnerUserID;

create or replace view highestScoreUsersExplode as select ownerUserId, eachword from highestScoreUsers1 LATERAL VIEW explode(tokenize(Title, True)) t as eachword where not is_stopword(eachword);

create or replace view tf_dummy as select ownerUserid, eachword, freq from (select ownerUserId, tf(eachword) as word2freq from highestScoreUsersExplode group by ownerUserId) t LATERAL VIEW explode(word2freq) t2 as eachword, freq;

create or replace view termFrequency as select * from (select ownerUserId, eachword, freq, rank() over (partition by ownerUserId order by freq desc) as rank from tf_dummy ) t where rank < 10;

select owneruserid,eachword,freq from termFrequency;